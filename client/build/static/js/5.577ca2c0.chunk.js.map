{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/auth/auth.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","rest","className","type","onChange","SignIn","history","useHistory","useState","email","password","user","setUser","updateUser","e","target","name","signIn","a","preventDefault","console","log","auth","signInWithEmailAndPassword","error","onSubmit","required","google","onClick","signInWithGoogle","SignUp","displayName","confirmPassword","form","setForm","updateForm","signUp","alert","createUserWithEmailAndPassword","createUser","Auth"],"mappings":"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","file":"static/js/5.577ca2c0.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\n\r\n// Styles\r\nimport './form-input.styles.scss'\r\n\r\nconst FormInput = ({ handleChange, label, ...rest }) => {\r\n  return (\r\n    <div className='group'>\r\n      <input\r\n        type='text'\r\n        className='form-input'\r\n        onChange={handleChange}\r\n        {...rest}\r\n      />\r\n      {label && (\r\n        <label className={`${rest.value.length && 'shrink'} form-input-label`}>\r\n          {label}\r\n        </label>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// Components\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\n// Utils\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'\r\n\r\n// Styles\r\nimport './sign-in.styles.scss'\r\n\r\nconst SignIn = () => {\r\n  let history = useHistory()\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const updateUser = e => {\r\n    const { value, name } = e.target\r\n    // have to spread first, then update\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  const signIn = async e => {\r\n    e.preventDefault()\r\n    console.log('Signing in...')\r\n\r\n    try {\r\n      await auth.signInWithEmailAndPassword(user.email, user.password)\r\n      history.push('/')\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2>I already have an account.</h2>\r\n      <span>Sign in with your email and password!</span>\r\n\r\n      <form onSubmit={signIn}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          value={user.email}\r\n          handleChange={updateUser}\r\n          label='Email'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={user.password}\r\n          handleChange={updateUser}\r\n          label='Password'\r\n          required\r\n        />\r\n\r\n        <div className='buttons'>\r\n          <CustomButton type='submit'>Sign In</CustomButton>\r\n          <CustomButton google onClick={signInWithGoogle} type='button'>\r\n            Sign In With Google\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// Components\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\n// Utils\r\nimport { auth, createUser } from '../../firebase/firebase.utils'\r\n\r\n// Styles\r\nimport './sign-up.styles.scss'\r\n\r\nconst SignUp = () => {\r\n  const initialState = {\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  }\r\n\r\n  const [form, setForm] = useState(initialState)\r\n  let history = useHistory()\r\n\r\n  const updateForm = e => {\r\n    const { value, name } = e.target\r\n    // have to spread first, then update\r\n    setForm({ ...form, [name]: value })\r\n  }\r\n\r\n  const signUp = async e => {\r\n    e.preventDefault()\r\n    console.log('Signing up...')\r\n    const { displayName, email, password, confirmPassword } = form\r\n    if (password !== confirmPassword) {\r\n      return alert('Passwords do not match!')\r\n    }\r\n\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      )\r\n      await createUser(user, { displayName })\r\n      history.push('/')\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2>I do not have an account.</h2>\r\n      <span>Sign up with an email & password!</span>\r\n\r\n      <form onSubmit={signUp}>\r\n        <FormInput\r\n          name='displayName'\r\n          type='text'\r\n          value={form.displayName}\r\n          handleChange={updateForm}\r\n          label='Name'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          value={form.email}\r\n          handleChange={updateForm}\r\n          label='Email'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={form.password}\r\n          handleChange={updateForm}\r\n          label='Password'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name='confirmPassword'\r\n          type='password'\r\n          value={form.confirmPassword}\r\n          handleChange={updateForm}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n\r\n        <CustomButton type='submit'>Sign Up</CustomButton>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\n\r\n// Styles\r\nimport './auth.styles.scss'\r\n\r\n// Components\r\nimport SignIn from '../../components/sign-in/sign-in.component'\r\nimport SignUp from '../../components/sign-up/sign-up.component'\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <div className='auth'>\r\n      <SignIn />\r\n      <SignUp />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"],"sourceRoot":""}